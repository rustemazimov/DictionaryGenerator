/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package list.sorter;

import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Rustem Azimov
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        super("List Sorter");
        initComponents();
        //setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        OpenFileButton = new javax.swing.JButton();
        saveFileButton = new javax.swing.JButton();
        sortAndSaveButton = new javax.swing.JButton();
        resultList = new java.awt.List();
        openFileLabel = new javax.swing.JTextField();
        closeFileLabel = new javax.swing.JTextField();
        copyButton = new javax.swing.JButton();
        duplicatesOption = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        OpenFileButton.setText("Open File");
        OpenFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileButtonActionPerformed(evt);
            }
        });

        saveFileButton.setText("Save File");
        saveFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileButtonActionPerformed(evt);
            }
        });

        sortAndSaveButton.setText("Sort and Save");
        sortAndSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortAndSaveButtonActionPerformed(evt);
            }
        });

        resultList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultListActionPerformed(evt);
            }
        });

        openFileLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileLabelActionPerformed(evt);
            }
        });

        copyButton.setText("Copy");
        copyButton.setToolTipText("Copied to Clipboard");
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });

        duplicatesOption.setText("Without duplicates");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(duplicatesOption)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(copyButton))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(72, 72, 72)
                            .addComponent(sortAndSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addComponent(resultList, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openFileLabel)
                    .addComponent(closeFileLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OpenFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpenFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(copyButton)
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(sortAndSaveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(duplicatesOption)
                        .addGap(6, 6, 6)))
                .addComponent(resultList, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        resultList.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OpenFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileButtonActionPerformed
          // TODO add your handling code here:
          JFileChooser fileChooser = new JFileChooser();
          fileChooser.setDialogTitle("Choose a file to read words");
          int status = fileChooser.showOpenDialog(null);
          if(status == JFileChooser.APPROVE_OPTION)
          {
              this.openedFile = fileChooser.getSelectedFile();
              this.openFileLabel.setText(this.openedFile.getAbsolutePath());
          }
                 
    }//GEN-LAST:event_OpenFileButtonActionPerformed

    private void saveFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Choose a file to read words");
          int status = fileChooser.showOpenDialog(null);
          if(status == JFileChooser.APPROVE_OPTION)
          {
              this.closedFile = fileChooser.getSelectedFile();
              this.closeFileLabel.setText(this.closedFile.getAbsolutePath());
          }
    }//GEN-LAST:event_saveFileButtonActionPerformed

    private void resultListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultListActionPerformed

    private void sortAndSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortAndSaveButtonActionPerformed
       resetListView();
       String openFilePath = this.openFileLabel.getText();
       String closeFilePath = this.closeFileLabel.getText();
       if(validatePath(openFilePath) && validatePath(closeFilePath))
       {
            try {
            this.resultList.setEnabled(true);
            MyFileReadWriter readWriter = new MyFileReadWriter(new File(openFilePath), new File(closeFilePath));
            WordListManupulator manupulator = new WordListManupulator(this.resultList, readWriter);
            manupulator.sortWriteAndShowResult(this.duplicatesOption.isSelected());
            showMessage("Data was generated.\nWas uploaded into file", "Info");
        } catch (FileNotFoundException ex) {
            showMessage("File(s) not found", "Info");
        }  catch (IOException ex) {
           }
       }
        
    }//GEN-LAST:event_sortAndSaveButtonActionPerformed
    private boolean validatePath(String path){
        if(path.equals("")){
            showMessage("File not selected", "Info");
            return false;
        }
        else if(!path.endsWith(".docx"))
        {
            showMessage("Only .docx files are supported", "Info");
            return false;
        }
        return true;
    }
     private void showMessage(String txt, String title){
        JOptionPane.showMessageDialog(this.jPanel1, txt, title, JOptionPane.INFORMATION_MESSAGE);
    }
    private void openFileLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openFileLabelActionPerformed

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        // TODO add your handling code here:
        StringBuilder txt = new StringBuilder(this.resultList.getItemCount());
        String[] items = this.resultList.getItems();
        for(String item: items){
            txt.append(item).append("\n");
        }
        if(!txt.toString().equals(""))
        {
            copy(txt.toString());
        }
    }//GEN-LAST:event_copyButtonActionPerformed
    private void copy(String txt){
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(txt), null);
        showMessage("Copied to Clipboard", "Info");
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OpenFileButton;
    private javax.swing.JTextField closeFileLabel;
    private javax.swing.JButton copyButton;
    private javax.swing.JRadioButton duplicatesOption;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField openFileLabel;
    private java.awt.List resultList;
    private javax.swing.JButton saveFileButton;
    private javax.swing.JButton sortAndSaveButton;
    // End of variables declaration//GEN-END:variables
    private File openedFile;
    private File closedFile;

    private void resetListView() {
        this.resultList.removeAll();
    }
}
